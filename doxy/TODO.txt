# Organize all the Komodo dev-team repositories into the submodules, and organize a Doxyfile and Doxybook flow for each one
# Create a master CMake file that allows anyone to simply run CMake and update the live documentation
# Potentially create a repository/website that holds a temporary version, so that developers can test things out, if needed
# -- This would require that there be some setting somewhere in the documentation -- possibly in the source code itself -- that sets something to private and is not rendered to the live site

# make Doxygen 
# cmake -DANTARA_BUILD_DOCS=ON ../
# .github/workflows/docs.yml

# Build process for Antara Gaming SDK
# Some script to alter the Doxyfile, or download a different Doxyfile
# This doxyfile builds the documentation to xml, disables html and latex, and may need to change the output directory
# mkdir build
# cd build
# cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER="$(which clang)" -DANTARA_BUILD_DOCS=ON ../
# cmake --build . --config Debug
# make doxygen
# the output is in build/docs/doxygen/xml

# Build process for doxybook2 (necessary for nodes that want to compile/update code and do not yet have Doxybook2 installed)
# Download the project and all of the submodules
# git clone https://github.com/matusnovak/doxybook2.git
# cd doxybook2
# git submodule update --init
# 
# # Configure the project
# mkdir build
# cd build
# cmake -G "Unix Makefiles" \
#     -DDOXYBOOK_TESTS=OFF \
#     -DDOXYBOOK_STATIC_STDLIB=OFF \
#     -DBUILD_TESTS=OFF \
#     -DBUILD_TESTING=OFF \
#     -DBUILD_SHARED_LIBS=OFF \
#     -DCMAKE_BUILD_TYPE=MinSizeRel \
#     ..
# # Build it
# cmake --build .
# 
# # Done!

# How to get the git repo to ignore submodules
# git config submodule.<your module path>.ignore all

# If you already cloned the project and forgot --recurse-submodules, you can combine the git submodule init and git submodule update steps by running git submodule update --init. To also initialize, fetch and checkout any nested submodules, you can use the foolproof git submodule update --init --recursive.

# To ignore submodules in git repo
# git config submodule.<your module path>.ignore all

# To remove a submodule you need to:
# 
#     Delete the relevant section from the .gitmodules file.
#     Stage the .gitmodules changes git add .gitmodules
#     Delete the relevant section from .git/config.
#     Run git rm --cached path_to_submodule (no trailing slash).
#     Run rm -rf .git/modules/path_to_submodule (no trailing slash).
#     Commit git commit -m "Removed submodule "
#     Delete the now untracked submodule files rm -rf path_to_submodule

# To run a template-driven build from the /doxy directory
submodules/doxybook2/build/src/DoxybookCli/doxybook2 --input submodules/antara-gaming-sdk/build/docs/doxygen/xml/ --output outputDir/ --templates ./templates/

# Create a Test that tests whether the number of times the words "New File" or something similar (maybe something more coded to avoid ambiguity between developer descriptions and the actual concept) appears in the output in the antara-gaming-sdk folder, and the number of files in the outpuDir
